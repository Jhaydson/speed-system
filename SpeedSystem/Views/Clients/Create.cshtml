@model SpeedSystem.Models.Client

@{
    ViewBag.Title = "Client";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="section">
            <div class="form-horizontal">
                <div class="card-panel">

                    <div id="card-alert" class="card orange">
                        <div class="card-content white-text">
                            <p>@Html.ValidationSummary(true, "")</p>
                        </div>
                        <button type="button" class="close white-text" data-dismiss="alert" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.FirstName)</label>
                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.LastName)</label>
                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.Email)</label>
                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.Photo)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.Gnere)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Gnere, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gnere, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.TypePerson)</label>
                    <div class="input-field col s6">
                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.TypePerson, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypePerson, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CpfOrCnpj, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CpfOrCnpj, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.CpfOrCnpj)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.DateBirth)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AvailableCredit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AvailableCredit, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.AvailableCredit)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.StatusClient)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.StatusClient, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StatusClient, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <a class=" waves-effect waves-light  btn #00e676 green accent-3" href="@Url.Action("Index")"> <i class="material-icons left">arrow_back</i>Voltar</a>
                            <input type="submit" value="Adicionar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
}


@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("#TypePerson").change(function () {
                var select = document.getElementById('TypePerson').value;
                if (select == 1) {
                    jQuery("#CpfOrCnpj").mask("999.999.999-99");
                } else if (select == 2) {
                    jQuery("#CpfOrCnpj").mask("99.999.999/9999-99");
                }
            });
        });
    </script>

    
    @Scripts.Render("~/bundles/jqueryval")
}
