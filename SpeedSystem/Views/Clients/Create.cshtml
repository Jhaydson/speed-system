@model SpeedSystem.Models.Client

@{
    ViewBag.Title = "Cadastro e Controle de Cliente";
}




<!--breadcrumbs start-->
<div id="breadcrumbs-wrapper">
    <!-- Search for small screen -->
    <div class="header-search-wrapper grey lighten-2 hide-on-large-only">
        <input type="text" name="Search" class="header-search-input z-depth-2" placeholder="Explore Materialize">
    </div>
    <div class="container">
        <div class="row">
            <div class="col s10 m6 l6">
                <h5 class="breadcrumbs-title">@ViewBag.Title</h5>
                <ol class="breadcrumbs">
                    <li><a href="#">Configurações Gerais</a></li>
                    <li class="active">@ViewBag.Title</li>

                </ol>
            </div>

        </div>
    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="section">
            <div class="form-horizontal">
                <div class="card-panel">

                    <p>@Html.ValidationSummary(true, "")</p>

                    <div class="row">
                        <div class="input-field col s3">
                            <div class="col-md-10">
                                @Html.EnumDropDownListFor(model => model.TypePerson, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.TypePerson, "", new { @class = "text-danger" })

                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <!-- Bloco PhysicalOrLegalName-->
                        <div class="input-field col s6" id="NameFisica">
                            @Html.EditorFor(model => model.PhysicalOrLegalName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhysicalOrLegalName, "", new { @class = "text-danger" })
                            <label>Nome</label>

                        </div>

                        <div class="input-field col s6 hide" id="NameJuridica">
                            @Html.EditorFor(model => model.PhysicalOrLegalName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PhysicalOrLegalName, "", new { @class = "text-danger" })
                            <label>Pessoa Jurídica</label>

                        </div>
                        <!--/ Bloco  PhysicalOrLegalName-->
                        <!-- Bloco  LastNameOrFantasyName-->
                        <div class="input-field col s6" id="LastName">

                            @Html.EditorFor(model => model.LastNameOrFantasyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastNameOrFantasyName, "", new { @class = "text-danger" })
                            <label>Sobre Nome</label>

                        </div>

                        <div class="input-field col s6 hide" id="FantasyName">

                            @Html.EditorFor(model => model.LastNameOrFantasyName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LastNameOrFantasyName, "", new { @class = "text-danger" })
                            <label>Nome Fantasia</label>

                        </div>

                        <!-- Bloco  LastNameOrFantasyName-->

                    </div>


                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.Email)</label>
                        </div>
                    </div>

                    <div class="input-field col s6">

                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.Photo)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.Gnere)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.Gnere, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gnere, "", new { @class = "text-danger" })

                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.TypePerson)</label>


                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CpfOrCnpj, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CpfOrCnpj, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.CpfOrCnpj)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.DateBirthOrOpening)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.DateBirthOrOpening, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DateBirthOrOpening, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EditorFor(model => model.AvailableCredit, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AvailableCredit, "", new { @class = "text-danger" })
                            <label>@Html.DisplayNameFor(model => model.AvailableCredit)</label>
                        </div>
                    </div>
                    <label>@Html.DisplayNameFor(model => model.StatusClient)</label>
                    <div class="input-field col s6">


                        <div class="col-md-10">
                            @Html.EnumDropDownListFor(model => model.StatusClient, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.StatusClient, "", new { @class = "text-danger" })

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <a class=" waves-effect waves-light  btn #00e676 green accent-3" href="@Url.Action("Index")"> <i class="material-icons left">arrow_back</i>Voltar</a>
                            <input type="submit" value="Adicionar" class="btn btn-default" />
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
}


@section Scripts {

    <script type="text/javascript">
        $(document).ready(function () {
            $("#TypePerson").change(function () {
                //Variavel que recebe valor do select
                var select = document.getElementById('TypePerson').value;

                if (select == 1) {

                    //PhysicalOrLegalName
                    $('#NameFisica').addClass('show');
                    $('#NameJuridica').addClass('hide');
                    $('#NameFisica').removeClass('hide');
                    ////PhysicalOrLegalName

                    //PhysicalOrLegalName
                    $('#LastName').addClass('show');
                    $('#FantasyName').addClass('hide');
                    $('#LastName').removeClass('hide');
                    ////PhysicalOrLegalName

                } else if (select == 2) {

                    //PhysicalOrLegalName
                    $('#NameFisica').addClass('hide');
                    $('#NameJuridica').removeClass('hide');
                     //PhysicalOrLegalName

                    $('#LastName').addClass('hide');
                    $('#FantasyName').removeClass('hide');
                }
            });
        });
    </script>


    @Scripts.Render("~/bundles/jqueryval")
}
